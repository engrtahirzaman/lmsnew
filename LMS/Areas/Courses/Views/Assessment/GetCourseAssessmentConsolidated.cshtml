@model IEnumerable<LMS.Models.Assessment>
@using LMS.Models;

@{
    ViewBag.Title = "GetCourseAssessmentConsolidated";
    Layout = "~/Views/Shared/_Layout.cshtml";

    CMSEntities db = new CMSEntities();
    int sno = 1;

    int TeacherCourseID = ViewBag.TeacherCourseID;
    int SessionID = ViewBag.SessionID;
    int StudentID = Convert.ToInt32(Session["StudentID"]);
    var stdInfo = db.Students.Find(StudentID);
    decimal assessmentTotall = 0;
    decimal assessmentTotalin1000 = 0;
    decimal TotalMarksOfAllAssessments = 0;
    decimal TotalWeightageOfAllAssessments = 0;
}
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-dashboard"></i>
            <a href="@Url.Action("Index", "MyDashboard", new { area = "" })">Dashboard</a>
        </li>
        <li>
            <i class="ace-icon fa fa-dashboard"></i>
            <a href="@Url.Action("AllCourses", "MyCourses", new { area = "Courses" })">My Courses</a>
        </li>
        <li class="active">Course Assessment Marks</li>
    </ul><!-- /.breadcrumb -->
</div>
<div class="page-content">
    <div class="row">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            <div class="page-header">
                <h1>
                    <a href="javascript:window.history.back();" title="Back"><i class="fa fa-arrow-circle-o-left"></i> Back</a>
                    |
                    Course Assesment MARKS for
                    <span class="orange"> @ViewBag.CourseCodeTitle </span>
                </h1>
            </div>

            <div class="widget-box transparent">
                <div class="widget-body">
                    <div class="widget-main no-padding">
                        <table class="table table-bordered table-striped">
                            <tbody>
                                <tr>
                                    <th>
                                        Name
                                    </th>

                                    <td>
                                        @stdInfo.Admission.FirstName @stdInfo.Admission.LastName
                                    </td>

                                    <th>
                                        RegNo
                                    </th>

                                    <td>
                                        @stdInfo.RegNo
                                    </td>
                                </tr>


                                <tr>
                                    <th>
                                        Session
                                    </th>

                                    <td>
                                        @(Model.FirstOrDefault()?.TeacherCours.Session.Session1)
                                    </td>

                                    <th>
                                        Course
                                    </th>

                                    <td>
                                        @(Model.FirstOrDefault()?.TeacherCours.Course.Title)
                                    </td>
                                </tr>

                                <tr>
                                    <th>
                                        Section
                                    </th>

                                    <td>
                                        @(Model.FirstOrDefault()?.TeacherCours.Section)
                                    </td>

                                    <th>
                                        Group
                                    </th>

                                    <td>
                                        @(stdInfo.StudentGroup)
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        Instructor
                                    </th>

                                    <td>
                                        @(Model.FirstOrDefault()?.TeacherCours.EmpForm.Title.Title1)   @(Model.FirstOrDefault()?.TeacherCours.EmpForm.Name)
                                    </td>

                                    <th>
                                        Semester
                                    </th>

                                    <td>
                                        @(stdInfo.StudentSemesters.Max(t=>t.SemesterNo))
                                    </td>
                                </tr>



                            </tbody>
                        </table>
                    </div><!-- /.widget-main -->
                </div><!-- /.widget-body -->
            </div>



            <table class="table">
                @if (Model.Count() != 0)
                {



                    <tbody>
                        <tr>
                            <th>
                                Assessment Detail
                            </th>
                            <th>
                                <span class="label label-success arrowed-right">   OM</span>
                            </th>
                            <th>
                                OM%
                            </th>
                            <th>
                              <span class="label label-danger arrowed-right">  %inWeightage</span>
</th>
                        </tr>
                        @foreach (var group in Model.GroupBy(t => t.AssessmentName.Name))
                        {
                            decimal totalMarkssstdMarksinAssesment = 0;
                            decimal totalMarkssstdMarksinAssesmentPercentage = 0;
                            decimal totalMarkssstdMarksinAssesmentPercentageInWeightage = 0;


                            foreach (var itemDefinedDetails in group)
                            {
                                string assessmentt = string.Empty;
                                decimal omPecentage = 0;
                                decimal omPecentageInWeightage = 0;

                                var stdMarksinAssesment = itemDefinedDetails.AssessmentDetails.Where(t => t.StudentID == StudentID).ToList();
                                decimal MarksinAssesment = stdMarksinAssesment.Sum(t => t.ObtainedMarks);
                                assessmentTotall += MarksinAssesment;
                                totalMarkssstdMarksinAssesment += MarksinAssesment;

                                //first find the total in given weightage
                                decimal temp = MarksinAssesment / (decimal)itemDefinedDetails.TotalMarks * 100;

                                omPecentage = temp;
                                totalMarkssstdMarksinAssesmentPercentage += omPecentage;


                                temp = temp * (decimal)itemDefinedDetails.Weightage / 100;

                                omPecentageInWeightage = temp;
                                totalMarkssstdMarksinAssesmentPercentageInWeightage += omPecentageInWeightage;

                                assessmentTotalin1000 += temp;

                                <tr>
                                    <th>
                                        <span class="label label-inverse arrowed-right">@itemDefinedDetails.Description</span>
                                        <span class="label label-info arrowed-right">@itemDefinedDetails.AssessmentName.Name</span>
                                        <span class="label label-success arrowed-right">@itemDefinedDetails.TotalMarks  @{TotalMarksOfAllAssessments += itemDefinedDetails.TotalMarks;} </span>
                                        <span class="label label-danger arrowed-right">@itemDefinedDetails.Weightage% @{TotalWeightageOfAllAssessments += (decimal)itemDefinedDetails.Weightage;}</span>
                                    </th>
                                    <td>@MarksinAssesment</td>
                                    <td>@omPecentage.ToString("0.00")</td>
                                    <td>@omPecentageInWeightage.ToString("0.00")</td>

                                </tr>

                            }

                            string assessmentName = group.Key; // The AssessmentName for the current group
                            decimal totalWeightage = group.Sum(item => (decimal)item.Weightage); // Calculate the total weightage for the current group
                            decimal totalMarks = group.Sum(item => (decimal)item.TotalMarks);

                            if (group.Count() > 1)
                            {


                                <tr>
                                    <th>
                                        <div class="alert">

                                            <strong>Total:@assessmentName </strong> @totalMarks, @totalWeightage%
                                        </div>

                                        @*<span class="label label-important arrowed-right">Total</span>
                                    <span class="label label-purple arrowed-right">@assessmentName</span>
                                    <span class="label label-purple arrowed-right">@totalMarks</span>
                                    <span class="label label-purple arrowed-right">@totalWeightage</span>*@
                                    </th>
                                    <td>@totalMarkssstdMarksinAssesment</td>
                                    <td>
                                        @totalMarkssstdMarksinAssesmentPercentage.ToString("0.00")
                                        @*@((totalMarkssstdMarksinAssesmentPercentage / (decimal)group.Count()).ToString("0.00"))*@
                                    </td>
                                    <td>@totalMarkssstdMarksinAssesmentPercentageInWeightage.ToString("0.00")</td>
                                </tr>

                            }


                        }
                        <tr style="background-color:lightgray">
                            <th>
                                <span class="label label-large label-inverse arrowed-right bolder">Total </span>
                                <span class="label label-large label-info arrowed-right bolder">All Assessments </span>
                                <span class="label label-large label-success arrowed-right bolder"> @TotalMarksOfAllAssessments </span>
                                <span class="label label-large label-danger arrowed-right bolder">@TotalWeightageOfAllAssessments </span>
                            </th>
                            <td><span class="label label-large label-success arrowed-right bolder">@assessmentTotall</span> </td>
                            <td></td>
                            <td><span class="label label-large label-danger arrowed-right bolder">@assessmentTotalin1000.ToString("0.00")</span></td>
                        </tr>
                        <!-- Add more rows as needed -->
                    </tbody>
                }
            </table>
        </div>
    </div>
</div>
