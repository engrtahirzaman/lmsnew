@model  IEnumerable<LMS.Models.SurveyInitiated>
@using LMS.Models;
@using System.Globalization

@{
    ViewBag.Title = "Survey";
    Layout = "~/Views/Shared/_Layout.cshtml";
    CMSEntities db = new CMSEntities();

    var SurveyInitiatedOpenOnly = Model.Where(t => t.OpeningDate <= DateTime.Now && t.ClosingDate >= DateTime.Now).FirstOrDefault();

}
@if (SurveyInitiatedOpenOnly != null)
{

    int SurveryInitiatedID = SurveyInitiatedOpenOnly.ID;
    int StudentCourseID = Convert.ToInt32(ViewBag.StudentCourseID);
    int SessionID = Convert.ToInt32(ViewBag.SessionID);
    int CourseID = Convert.ToInt32(ViewBag.CourseID);
    int TeacherCourseID = Convert.ToInt32(ViewBag.TeacherCourseID);

    var surveyInitiatedRepsonse = db.SurveyInitiatedResponses.Where(t => t.SessionID == SessionID && t.TeacherCoursesID == TeacherCourseID && t.SurveyInititatedID == SurveryInitiatedID && t.StudentCourseID == StudentCourseID).FirstOrDefault();
    var survey = db.Surveys.Find(SurveyInitiatedOpenOnly.SurveyID);




    <div class="breadcrumbs ace-save-state" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-dashboard"></i>
                <a href="@Url.Action("Index", "MyDashboard", new { area = "" })">Dashboard</a>
            </li>
            <li>
                <i class="ace-icon fa fa-dashboard"></i>
                <a href="@Url.Action("AllCourses", "MyCourses", new { area = "Courses" })">My Courses</a>
            </li>
            <li class="active">My Survey</li>
        </ul><!-- /.breadcrumb -->
    </div>
    <div class="page-content">
        <div class="row">
            <div class="col-xs-12">
                <!-- PAGE CONTENT BEGINS -->
                <div class="page-header">
                    <h1>
                        <a href="javascript:window.history.back();" title="Back"><i class="fa fa-arrow-circle-o-left"></i> Back</a>
                        |
                        My FeedBack Survey <span class="red">@SurveyInitiatedOpenOnly.Survey.Name</span> for <span class="purple"> @ViewBag.TeacherName </span> <span class="orange"> @ViewBag.CourseCodeTitle </span>
                    </h1>
                </div>
                <div class="center">
                    @if (surveyInitiatedRepsonse == null && surveyInitiatedRepsonse?.Submitted != true)
                    {
                        <span class="label label-lg label-pink">@SurveyInitiatedOpenOnly.EvaluationCycle.Name</span>
                        <span class="label label-lg label-danger arrowed arrowed-right">
                            Last Date for Final Submission: @SurveyInitiatedOpenOnly.ClosingDate.Value.ToString("dd/MMMM/yyyy", CultureInfo.InvariantCulture)
                        </span>
                    }

                    @*@if (surveyInitiatedRepsonse != null && surveyInitiatedRepsonse.Submitted == true)
                        {
                            <span class="label label-primary arrowed arrowed-right">
                                Survey Submitted: @surveyInitiatedRepsonse.SubmittedDate.Value.ToString("dd/MMMM/yyyy", CultureInfo.InvariantCulture)
                                @if (surveyInitiatedRepsonse.SubmittedTime.HasValue && surveyInitiatedRepsonse.SubmittedTime.Value is DateTime)
                                {
                                    <text>
                                        @surveyInitiatedRepsonse.SubmittedTime.Value.ToString("h:mm tt", CultureInfo.InvariantCulture)
                                    </text>
                                }
                            </span>
                        }
                        else
                        {
                            <span class="label label-danger arrowed arrowed-right">
                                Last Date for Final Submission: @SurveyInitiatedOpenOnly.ClosingDate.Value.ToString("dd/MMMM/yyyy", CultureInfo.InvariantCulture)
                            </span>
                        }*@

                </div>
                <!-- div.table-responsive -->
                <!-- div.dataTables_borderWrap -->
                <h1 class="text-danger">@ViewBag.Error</h1>
                @Html.Raw(TempData["Sucess"])
                @Html.Raw(TempData["Failed"])


                @{
                    int formCounter = 1;
                    int sectionCounter = 1;
                    int questionCounter = 1;
                    int surveyInitiatedRepsonseID = surveyInitiatedRepsonse?.ID ?? -1;
                }

                @if (surveyInitiatedRepsonse == null || surveyInitiatedRepsonse.Submitted != true)
                {

                    <!-- Display active SurveyHeadings -->
                    foreach (var heading in survey.SurveyHeadings.Where(s => s.isActive))
                    {
                        <div class="panel panel-primary">
                            <div class="panel-heading">
                                <h3 class="panel-title">Section-@((char)('A' + sectionCounter - 1)): @heading.Name</h3>
                            </div>
                            <div class="panel-body">
                                <!-- Display active SurveyHeadingQA items -->
                                @foreach (var question in heading.SurveyHeadingQAs.Where(q => q.isActive == true))
                                {
                                    <div id="resultDiv"></div>
                                    <div class="panel panel-info" style="background-color: aliceblue">
                                        <!-- Display QA details, adjust as needed -->

                                        <h4 class="widget-title lighter">
                                            <i class="ace-icon fa fa-star orange"></i>
                                            Q-@questionCounter: @question.Question
                                        </h4>
                                        <!-- Add more fields as needed -->

                                        @if (question.QuestionTypeID == 1)
                                        {
                                            <!-- Display radio buttons for question type 1 -->
                                            <div class="rounded-box">
                                                <div class="radio-group" style="display: flex; justify-content: center;">

                                                    <form id="form-@formCounter" action="@Url.Action("SaveQuestionResponse", "Survey", new { area = "Courses" })" method="post">
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("surveyInitiatedRepsonseID", surveyInitiatedRepsonseID)
                                                        @Html.Hidden("surveyInitiatedID", SurveyInitiatedOpenOnly.ID)
                                                        @Html.Hidden("surveyID", SurveyInitiatedOpenOnly.SurveyID)
                                                        @Html.Hidden("SurveyHeadingID", question.SurveyHeadingID)
                                                        @Html.Hidden("SortNo", question.SortNo)
                                                        @Html.Hidden("QuestionTypeID", question.QuestionTypeID)
                                                        @Html.Hidden("Question", question.Question)
                                                        @Html.Hidden("SessionID", SessionID)
                                                        @Html.Hidden("StudentCourseID", StudentCourseID)
                                                        @Html.Hidden("CourseID", CourseID)
                                                        @Html.Hidden("surveyHeadingQAID", question.ID)
                                                        @Html.Hidden("TeacherCourseID", TeacherCourseID)
                                                        <!-- Hidden input field to store the selected value -->
                                                        <input type="hidden" id="selectedValueInput" name="SelectedValue" value="" />


                                                        @{
                                                            int radioCounter = 1;
                                                        }
                                                        <div class="control-group">
                                                            @foreach (var item in question.QuestionType.QuestionTypeAnswerOptions)
                                                            {
                                                                string radioCC = questionCounter.ToString() + radioCounter.ToString();
                                                                <label>
                                                                    <input type="@item.InputType" id="sd-@questionCounter" name="name" value="@item.OptionName" onclick="submitQuestion('@item.OptionName', @formCounter)" class="ace">
                                                                    <span class="lbl">@item.OptionName</span>
                                                                </label>
                                                            }
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>

                                        }
                                        else if (question.QuestionTypeID == 2)
                                        {
                                            <form id="form-@formCounter" action="@Url.Action("SaveQuestionResponse", "Survey", new { area = "Courses" })" method="post">
                                                @Html.AntiForgeryToken()
                                                @Html.Hidden("surveyInitiatedRepsonseID", surveyInitiatedRepsonseID)
                                                @Html.Hidden("surveyInitiatedID", SurveyInitiatedOpenOnly.ID)
                                                @Html.Hidden("surveyID", SurveyInitiatedOpenOnly.SurveyID)
                                                @Html.Hidden("SurveyHeadingID", question.SurveyHeadingID)
                                                @Html.Hidden("SortNo", question.SortNo)
                                                @Html.Hidden("QuestionTypeID", question.QuestionTypeID)
                                                @Html.Hidden("Question", question.Question)
                                                @Html.Hidden("SessionID", SessionID)
                                                @Html.Hidden("StudentCourseID", StudentCourseID)
                                                @Html.Hidden("CourseID", CourseID)
                                                @Html.Hidden("surveyHeadingQAID", question.ID)
                                                @Html.Hidden("TeacherCourseID", TeacherCourseID)
                                                <!-- Hidden input field to store the selected value -->
                                                <!-- Display a multiline textbox for question type 2 -->

                                                @{string tyy = "txt";}
                                                <textarea name="textType" id="textt" rows="4" style="width: 100%;" placeholder="Write your answer and then click on the button 'Save This Answer' "></textarea>
                                                <a class="btn btn-info btn-xs pull-right" title="Save This Answer" onclick="submitQuestion('@tyy', @formCounter)">
                                                    <i class="fa fa-save"></i> Save This Answer
                                                </a>

                                            </form>
                                        }


                                    </div>
                                    <br />
                                    <hr />
                                    questionCounter++;
                                    formCounter++;
                                }
                            </div>
                        </div>
                        sectionCounter++;
                        questionCounter = 1; // Reset question counter for each section
                    }
                }
                <div id="surveyContainer"></div>
                <style>
                    .rounded-box {
                        border: 1px solid #ccc;
                        border-radius: 10px;
                        padding: 5px;
                        margin: 5px 0;
                        text-align: center; /* Center the content */
                        background-color: white;
                    }

                    .radio-group {
                        display: flex;
                        align-items: center;
                        justify-content: center; /* Center the items horizontally */
                    }

                    .radio-item {
                        margin-bottom: 10px;
                    }
                </style>
            </div>

            <!-- PAGE CONTENT ENDS -->
        </div><!-- /.col -->
    </div><!-- /.page-content -->
    <script src="~/Content/assets/js/jquery-2.1.4.min.js"></script>
    <script>

     function submitQuestion(optionname, questionCounter) {

        // Get the value of the clicked radio button
       //var selectedValue = $(clickedRadio).val();
        // var selectedValue = $('input[name="QR-' + optionname + '"]:checked').val();
        //alert(optionname + " saddfd " + questionCounter);
        // Set the selected value in a hidden input field

        var surveyInitiatedID = @SurveryInitiatedID;
        var sstudentCourseID  = @StudentCourseID;
         var teachCoID = @TeacherCourseID;


        var selectedInput = $('#selectedValueInput');
        selectedInput.val(optionname);
        var formData = $("#form-" + questionCounter).serialize();



        $.ajax({
            url: '@Url.Action("SaveQuestionResponse", "Survey")',
            type: 'POST',
            data: formData,
            success: function(response) {
                // Handle the success response
                if (response.Message == "Success") {
                    // $('#resultDiv').html(result.Data);
                    //alert('record is saved.');

                    loadUnsubmittedSurvey(surveyInitiatedID, sstudentCourseID, teachCoID);
                }
            },
            error: function(error) {
                // Handle the error response
                alert("The record is not saved.", error);
            }
        });
        return false; // Prevent the default form submission
    }



    $(document).ready(function () {

        var surveyInitiatedID = @SurveryInitiatedID; // Replace with the actual survey initiated ID
        var sstudentCourseID = @StudentCourseID;
         var teachCoID = @TeacherCourseID;
        // Call the function to load unsubmitted survey
        loadUnsubmittedSurvey(surveyInitiatedID, sstudentCourseID, teachCoID);
    });






    // Define a function to load unsubmitted survey and update the specified container
    function loadUnsubmittedSurvey(surveyInitiatedID, sstudentCourseID, TeacherCourseID) {
        // Make an AJAX request to your action method
       // $('#surveyContainer').html();
        $.ajax({
            url: '@Url.Action("loadUnSubmittedSurvey", "Survey")', // Replace 'ControllerName' with your actual controller name
            type: 'GET',
            data: { SurveryInitiatedID: surveyInitiatedID, StudentCourseID: sstudentCourseID, TeacherCourseID: TeacherCourseID }, // Pass any required parameters
            success: function (response) {
                if (response.success) {
                    // Update the HTML content of the specified container
                    $('#surveyContainer').html(response.html);
                } else {
                    console.error(response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error: " + status + ", " + error);
            }
        });
    }



    function submitForm() {
        // Hide the button and show the spinner
        var button = document.querySelector('.btn-purple');
        var spinner = document.getElementById('spinner');
        button.style.display = 'none';
        spinner.style.display = 'block';

        // Submit the form using JavaScript
        var form = document.getElementById('submitSurveyForm');
        var formData = new FormData(form);

        //fetch("/Courses/Survey/SubmitQuestionResponse"
        fetch('@Url.Action("SubmitQuestionResponse", "Survey")', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            // Handle the response, you can check response.ok or response.status
            if (response.ok) {
                // Success: show a message, reload the page, etc.
                alert("Form submitted successfully!");
                location.reload();
            } else {
                // Handle the error case
                alert("Error submitting the form!");
            }
        })
        .catch(error => {
            // Handle network or other errors
            console.error('Error:', error);
            alert("Error submitting the form!");
        })
        .finally(() => {
            // Show the button again and hide the spinner
            button.style.display = 'block';
            spinner.style.display = 'none';
        });
    }
    </script>
}
else
{
    <div class="breadcrumbs ace-save-state" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-dashboard"></i>
                <a href="@Url.Action("Index", "MyDashboard", new { area = "" })">Dashboard</a>
            </li>
            <li>
                <i class="ace-icon fa fa-dashboard"></i>
                <a href="@Url.Action("AllCourses", "MyCourses", new { area = "Courses" })">My Courses</a>
            </li>
            <li class="active">My Survey</li>
        </ul><!-- /.breadcrumb -->
    </div>
    <div class="page-content">
        <div class="row">
            <div class="col-xs-12">
                <!-- PAGE CONTENT BEGINS -->
                <div class="page-header">
                    <h1>
                        <a href="javascript:window.history.back();" title="Back"><i class="fa fa-arrow-circle-o-left"></i> Back</a>

                    </h1>

                </div>

                <div class="alert alert-block alert-success">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="ace-icon fa fa-times"></i>
                    </button>

                    <i class="ace-icon fa fa-close red"></i>

                    Sorry!
                    <strong class="red">
                        No Survey
                    </strong>,
                   is initiated yet. Please wait for a while and soon you will find a survey before MSE (Mid Semester Exam) or ESE (End Semester Exam).
                </div>
            </div>
        </div>
    </div>

 }
